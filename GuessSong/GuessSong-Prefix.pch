//
//  Prefix header
//
//  The contents of this file are implicitly included at the beginning of every source file.
//

#import <Availability.h>

#ifndef __IPHONE_5_0
#warning "This project uses features only available in iOS SDK 5.0 and later."
#endif

#ifdef __OBJC__
    #import <UIKit/UIKit.h>
    #import <Foundation/Foundation.h>
#endif

#define MY_BANNER_UNIT_ID @"ca-app-pub-3108667850339338/3316573652"
#define MY_BANNER_INTERSITIAL_UNIT_ID @"ca-app-pub-3108667850339338/7746773252"
#define LEADER_BOARD_IDENTIFIER @"com.dragon.relaxing"
#define WIDTH             28
#define CHAR_SPACING      3
#define LINE_SPACING      32
#define OFFSETY           320
#define SOURCE_CHAR_WIDTH 35
#define SOURCE_VIEW_WIDTH 250
#define SOURCE_OFFSET_Y   420
#define SOURCE_LINE_SPACING 40
#define FONT_FAMILY         @"DINBold"
#define PLAY_ROUND          @"play_round"
#define START_COINS         100
#define kServerURL          @"http://topapp.us/"
#define COUNTRY_CODE        @"vn"
#define BG_MUSIC            @"memphis_soul"
#define KWRONG_MP3          @"incorrect_sound"
#define kTADA_MP3           @"tada"
#define NAV_BG_COLOR        @"#ce1852"

//risign text field
#define kNotificationResignTextField                                @"resign_first_responder_text_field"
//change language
#define kNotificationLanguagechanged                                @"notification_language_changed"
//network notification
#define kNotificationNetwork                                        @"network notification"

#pragma mark - REACHABILITY NETWORK

//check network available
#define kNetworkAvailable                                           @"internet avaiable"
//network is wwan
#define kNetworkWWan                                                @"network wwan"

#define IS_IOS7 floor(NSFoundationVersionNumber) > NSFoundationVersionNumber_iOS_6_1
#define IS_IPAD ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad)
#define IS_IPHONE ( [ [ [UIDevice currentDevice] model ] rangeOfString:@"iPhone"].location != NSNotFound )
#define IS_WIDE_SCREEN ( fabs ( (double) [[UIScreen mainScreen] bounds].size.height - (double)568 ) < DBL_EPSILON)
#define IS_IPHONE_5 ( IS_IPHONE && IS_WIDE_SCREEN )

#define kNotifyDidChangeCoins       @"coins_changed"
#define kCoins                      @"coins"
#define kLevel                      @"level"
#define kQuizData                   @"quiz_data"
#define kUpdatedDate                @"updated_date"
#define kDoneClick                  @"done_click"
#define kBackgroundImage            @"background_image"
#define kShowHintAlert              1005
#define kDeleteAlert                1006
#define kDeleteCoins                10
#define kShowCoins                  15
#define kSkipCoins                  30
#define kSkipAlert                  1007
#define RATED_APP                   @"rated_app"
#define kSound                      @"sound"
#define PLAY_IMAGE                  @"play"
#define PAUSE_IMAGE                 @"pause"


#define DEBUG           1

#ifdef DEBUG
#   define NSLog(...) NSLog(__VA_ARGS__)
#else
#   define NSLog(...)
#endif

#ifdef DEBUG
#   define DLog(fmt, ...) NSLog((@"%s [Line %d] " fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__);
#else
#   define DLog(...)
#endif

#define ALog(fmt, ...) NSLog((@"%s [Line %d] " fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__);
#ifdef DEBUG
#   define ULog(fmt, ...)  { UIAlertView *alert = [[UIAlertView alloc] initWithTitle:[NSString stringWithFormat:@"%s\n [Line %d] ", __PRETTY_FUNCTION__, __LINE__] message:[NSString stringWithFormat:fmt, ##__VA_ARGS__]  delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil]; [alert show]; }
#else
#   define ULog(...)
#endif

#define LOG_LEVEL 4

// Define Log function by level. Set LOG_LEVEL to 1 when distribute
#ifdef DEBUG

#if (LOG_LEVEL >= 4)
#   define DLog_Low(fmt, ...) NSLog((@"%s [Line %d] " fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__);
#else
#   define DLog_Low(...)
#endif

#if (LOG_LEVEL >= 3)
#   define DLog_Med(fmt, ...) NSLog((@"%s [Line %d] " fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__);
#else
#   define DLog_Med(...)
#endif

#if (LOG_LEVEL >= 2)
#   define DLog_High(fmt, ...) NSLog((@"%s [Line %d] " fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__);
#else
#   define DLog_High(...)
#endif

#if (LOG_LEVEL >= 1)
#   define DLog_Error(fmt, ...) NSLog((@"%s [Line %d] " fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__);
#else
#   define DLog_Error(...)
#endif

#else
#	define DLog_Low(...)
#	define DLog_Med(...)
#	define DLog_High(...)
#	define DLog_Error(...)

#endif

